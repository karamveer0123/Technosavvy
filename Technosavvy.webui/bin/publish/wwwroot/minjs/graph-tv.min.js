!function (e, t) { "use strict"; var n, r, a = { CONTINUOUS_SCROLLING_TIMEOUT_INTERVAL: 50, SCROLL_OFFSET_FRACTION: 6, DATA_KEY_DDMENU_MODIFIED: "scrtabsddmenumodified", DATA_KEY_IS_MOUSEDOWN: "scrtabsismousedown", DATA_KEY_BOOTSTRAP_TAB: "bs.tab", CSS_CLASSES: { BOOTSTRAP4: "scrtabs-bootstrap4", RTL: "scrtabs-rtl", SCROLL_ARROW_CLICK_TARGET: "scrtabs-click-target", SCROLL_ARROW_DISABLE: "scrtabs-disable", SCROLL_ARROW_WITH_CLICK_TARGET: "scrtabs-with-click-target" }, SLIDE_DIRECTION: { LEFT: 1, RIGHT: 2 }, EVENTS: { CLICK: "click.scrtabs", DROPDOWN_MENU_HIDE: "hide.bs.dropdown.scrtabs", DROPDOWN_MENU_SHOW: "show.bs.dropdown.scrtabs", FORCE_REFRESH: "forcerefresh.scrtabs", MOUSEDOWN: "mousedown.scrtabs", MOUSEUP: "mouseup.scrtabs", TABS_READY: "ready.scrtabs", TOUCH_END: "touchend.scrtabs", TOUCH_MOVE: "touchmove.scrtabs", TOUCH_START: "touchstart.scrtabs", WINDOW_RESIZE: "resize.scrtabs" } }; function o(e) { this.stc = e } function i(e) { this.stc = e } function s(e) { this.stc = e } function l(t) { var n = this; n.$tabsContainer = t, n.instanceId = e.fn.scrollingTabs.nextInstanceId++, n.movableContainerLeftPos = 0, n.scrollArrowsVisible = !1, n.scrollToTabEdge = !1, n.disableScrollArrowsOnFullyScrolled = !1, n.reverseScroll = !1, n.widthMultiplier = 1, n.scrollMovement = new s(n), n.eventHandlers = new i(n), n.elementsHandler = new o(n) } n = "smartresizeScrtabs", e.fn[n] = function (e, t) { var r, o, i, s, l = t || a.EVENTS.WINDOW_RESIZE; return e ? this.bind(l, (r = e, function () { var e = this, t = arguments; s ? clearTimeout(s) : i && r.apply(e, t), s = setTimeout((function () { i || r.apply(e, t), s = null }), o || 100) })) : this.trigger(n) }, (r = o.prototype).initElements = function (e) { this.setElementReferences(e), this.setEventListeners(e) }, r.listenForTouchEvents = function () { var e, t, n, r = this.stc, o = r.scrollMovement, i = a.EVENTS, s = !1; r.$movableContainer.on(i.TOUCH_START, (function (n) { s = !0, t = r.movableContainerLeftPos, e = n.originalEvent.changedTouches[0].pageX })).on(i.TOUCH_END, (function () { s = !1 })).on(i.TOUCH_MOVE, (function (a) { if (s) { var i, l = a.originalEvent.changedTouches[0].pageX - e; r.rtl && (l = -l), (n = t + l) > 0 ? n = 0 : (i = o.getMinPos(), n < i && (n = i)), r.movableContainerLeftPos = n; var c = r.rtl ? "right" : "left"; r.$movableContainer.css(c, o.getMovableContainerCssLeftVal()), o.refreshScrollArrowsDisabledState() } })) }, r.refreshAllElementSizes = function () { var e, t = this, n = t.stc, r = n.scrollMovement, a = n.scrollArrowsVisible, o = { didScrollToActiveTab: !1 }; return t.setElementWidths(), t.setScrollArrowVisibility(), n.scrollArrowsVisible ? (e = r.getMinPos(), r.scrollToActiveTab({ isOnWindowResize: !0 }) || (r.refreshScrollArrowsDisabledState(), n.rtl ? n.movableContainerRightPos < e && r.incrementMovableContainerLeft(e) : n.movableContainerLeftPos < e && r.incrementMovableContainerRight(e)), o.didScrollToActiveTab = !0) : a && (n.movableContainerLeftPos = 0, r.slideMovableContainerToLeftPos()), o }, r.setElementReferences = function (n) { var r, o, i, s, l = this.stc, c = l.$tabsContainer; l.isNavPills = !1, l.rtl && c.addClass(a.CSS_CLASSES.RTL), l.usingBootstrap4 && c.addClass(a.CSS_CLASSES.BOOTSTRAP4), l.$fixedContainer = c.find(".scrtabs-tabs-fixed-container"), r = l.$fixedContainer.prev(), o = l.$fixedContainer.next(), n.leftArrowContent && (i = r.find("." + a.CSS_CLASSES.SCROLL_ARROW_CLICK_TARGET)), n.rightArrowContent && (s = o.find("." + a.CSS_CLASSES.SCROLL_ARROW_CLICK_TARGET)), i && i.length ? r.addClass(a.CSS_CLASSES.SCROLL_ARROW_WITH_CLICK_TARGET) : i = r, s && s.length ? o.addClass(a.CSS_CLASSES.SCROLL_ARROW_WITH_CLICK_TARGET) : s = o, l.$movableContainer = c.find(".scrtabs-tabs-movable-container"), l.$tabsUl = c.find(".nav-tabs"), l.$tabsUl.length || (l.$tabsUl = c.find(".nav-pills"), l.$tabsUl.length && (l.isNavPills = !0)), l.$tabsLiCollection = l.$tabsUl.find("> li"), l.$slideLeftArrow = l.reverseScroll ? r : o, l.$slideLeftArrowClickTarget = l.reverseScroll ? i : s, l.$slideRightArrow = l.reverseScroll ? o : r, l.$slideRightArrowClickTarget = l.reverseScroll ? s : i, l.$scrollArrows = l.$slideLeftArrow.add(l.$slideRightArrow), l.$win = e(t) }, r.setElementWidths = function () { var e = this, t = e.stc; t.winWidth = t.$win.width(), t.scrollArrowsCombinedWidth = t.$slideLeftArrow.outerWidth() + t.$slideRightArrow.outerWidth(), e.setFixedContainerWidth(), e.setMovableContainerWidth() }, r.setEventListeners = function (t) { var n = this, r = n.stc, o = r.eventHandlers, i = a.EVENTS, s = i.WINDOW_RESIZE + r.instanceId; t.enableSwiping && n.listenForTouchEvents(), r.$slideLeftArrowClickTarget.off(".scrtabs").on(i.MOUSEDOWN, (function (e) { o.handleMousedownOnSlideMovContainerLeftArrow.call(o, e) })).on(i.MOUSEUP, (function (e) { o.handleMouseupOnSlideMovContainerLeftArrow.call(o, e) })).on(i.CLICK, (function (e) { o.handleClickOnSlideMovContainerLeftArrow.call(o, e) })), r.$slideRightArrowClickTarget.off(".scrtabs").on(i.MOUSEDOWN, (function (e) { o.handleMousedownOnSlideMovContainerRightArrow.call(o, e) })).on(i.MOUSEUP, (function (e) { o.handleMouseupOnSlideMovContainerRightArrow.call(o, e) })).on(i.CLICK, (function (e) { o.handleClickOnSlideMovContainerRightArrow.call(o, e) })), r.tabClickHandler && r.$tabsLiCollection.find('a[data-toggle="tab"]').off(i.CLICK).on(i.CLICK, r.tabClickHandler), t.handleDelayedScrollbar && n.listenForDelayedScrollbar(), r.$win.off(s).smartresizeScrtabs((function (e) { o.handleWindowResize.call(o, e) }), s), e("body").on(a.EVENTS.FORCE_REFRESH, r.elementsHandler.refreshAllElementSizes.bind(r.elementsHandler)) }, r.listenForDelayedScrollbar = function () { var n = document.createElement("iframe"); n.id = "scrtabs-scrollbar-resize-listener", n.style.cssText = "height: 0; background-color: transparent; margin: 0; padding: 0; overflow: hidden; border-width: 0; position: absolute; width: 100%;", n.onload = function () { var r; function a() { try { e(t).trigger("resize"), r = null } catch (e) { } } n.contentWindow.addEventListener("resize", (function () { r && clearTimeout(r), r = setTimeout(a, 100) })) }, document.body.appendChild(n) }, r.setFixedContainerWidth = function () { var e = this.stc, t = e.$tabsContainer.get(0).getBoundingClientRect(); e.fixedContainerWidth = t.width || t.right - t.left, e.fixedContainerWidth = e.fixedContainerWidth * e.widthMultiplier, e.$fixedContainer.width(e.fixedContainerWidth) }, r.setFixedContainerWidthForHiddenScrollArrows = function () { var e = this.stc; e.$fixedContainer.width(e.fixedContainerWidth) }, r.setFixedContainerWidthForVisibleScrollArrows = function () { var e = this.stc; e.$fixedContainer.width(e.fixedContainerWidth - e.scrollArrowsCombinedWidth) }, r.setMovableContainerWidth = function () { var t = this.stc, n = t.$tabsUl.find("> li"); t.movableContainerWidth = 0, n.length && (n.each((function () { var n = e(this), r = 0; t.isNavPills && (r = parseInt(n.css("margin-left"), 10) + parseInt(n.css("margin-right"), 10)), t.movableContainerWidth += n.outerWidth() + r })), t.movableContainerWidth += 1, t.movableContainerWidth < t.fixedContainerWidth && (t.movableContainerWidth = t.fixedContainerWidth)), t.$movableContainer.width(t.movableContainerWidth) }, r.setScrollArrowVisibility = function () { var e = this, t = e.stc, n = t.movableContainerWidth > t.fixedContainerWidth; n && !t.scrollArrowsVisible ? (t.$scrollArrows.show(), t.scrollArrowsVisible = !0) : !n && t.scrollArrowsVisible && (t.$scrollArrows.hide(), t.scrollArrowsVisible = !1), t.scrollArrowsVisible ? e.setFixedContainerWidthForVisibleScrollArrows() : e.setFixedContainerWidthForHiddenScrollArrows() }, function (e) { e.handleClickOnSlideMovContainerLeftArrow = function () { this.stc.scrollMovement.incrementMovableContainerLeft() }, e.handleClickOnSlideMovContainerRightArrow = function () { this.stc.scrollMovement.incrementMovableContainerRight() }, e.handleMousedownOnSlideMovContainerLeftArrow = function () { var e = this.stc; e.$slideLeftArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN, !0), e.scrollMovement.continueSlideMovableContainerLeft() }, e.handleMousedownOnSlideMovContainerRightArrow = function () { var e = this.stc; e.$slideRightArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN, !0), e.scrollMovement.continueSlideMovableContainerRight() }, e.handleMouseupOnSlideMovContainerLeftArrow = function () { this.stc.$slideLeftArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN, !1) }, e.handleMouseupOnSlideMovContainerRightArrow = function () { this.stc.$slideRightArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN, !1) }, e.handleWindowResize = function () { var e = this.stc, t = e.$win.width(); if (t === e.winWidth) return !1; e.winWidth = t, e.elementsHandler.refreshAllElementSizes() } }(i.prototype), function (t) { t.continueSlideMovableContainerLeft = function () { var e = this, t = e.stc; setTimeout((function () { t.movableContainerLeftPos <= e.getMinPos() || !t.$slideLeftArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN) || e.incrementMovableContainerLeft() || e.continueSlideMovableContainerLeft() }), a.CONTINUOUS_SCROLLING_TIMEOUT_INTERVAL) }, t.continueSlideMovableContainerRight = function () { var e = this, t = e.stc; setTimeout((function () { t.movableContainerLeftPos >= 0 || !t.$slideRightArrowClickTarget.data(a.DATA_KEY_IS_MOUSEDOWN) || e.incrementMovableContainerRight() || e.continueSlideMovableContainerRight() }), a.CONTINUOUS_SCROLLING_TIMEOUT_INTERVAL) }, t.decrementMovableContainerLeftPos = function (e) { var t = this.stc; t.movableContainerLeftPos -= t.fixedContainerWidth / a.SCROLL_OFFSET_FRACTION, t.movableContainerLeftPos < e ? t.movableContainerLeftPos = e : t.scrollToTabEdge && (this.setMovableContainerLeftPosToTabEdge(a.SLIDE_DIRECTION.LEFT), t.movableContainerLeftPos < e && (t.movableContainerLeftPos = e)) }, t.disableSlideLeftArrow = function () { var e = this.stc; e.disableScrollArrowsOnFullyScrolled && e.scrollArrowsVisible && e.$slideLeftArrow.addClass(a.CSS_CLASSES.SCROLL_ARROW_DISABLE) }, t.disableSlideRightArrow = function () { var e = this.stc; e.disableScrollArrowsOnFullyScrolled && e.scrollArrowsVisible && e.$slideRightArrow.addClass(a.CSS_CLASSES.SCROLL_ARROW_DISABLE) }, t.enableSlideLeftArrow = function () { var e = this.stc; e.disableScrollArrowsOnFullyScrolled && e.scrollArrowsVisible && e.$slideLeftArrow.removeClass(a.CSS_CLASSES.SCROLL_ARROW_DISABLE) }, t.enableSlideRightArrow = function () { var e = this.stc; e.disableScrollArrowsOnFullyScrolled && e.scrollArrowsVisible && e.$slideRightArrow.removeClass(a.CSS_CLASSES.SCROLL_ARROW_DISABLE) }, t.getMinPos = function () { var e = this.stc; return e.scrollArrowsVisible ? e.fixedContainerWidth - e.movableContainerWidth - e.scrollArrowsCombinedWidth : 0 }, t.getMovableContainerCssLeftVal = function () { var e = this.stc; return 0 === e.movableContainerLeftPos ? "0" : e.movableContainerLeftPos + "px" }, t.incrementMovableContainerLeft = function () { var e = this, t = e.stc, n = e.getMinPos(); return e.decrementMovableContainerLeftPos(n), e.slideMovableContainerToLeftPos(), e.enableSlideRightArrow(), t.movableContainerLeftPos === n }, t.incrementMovableContainerRight = function (e) { var t = this, n = t.stc; return e ? n.movableContainerLeftPos = e : (n.movableContainerLeftPos += n.fixedContainerWidth / a.SCROLL_OFFSET_FRACTION, n.movableContainerLeftPos > 0 ? n.movableContainerLeftPos = 0 : n.scrollToTabEdge && t.setMovableContainerLeftPosToTabEdge(a.SLIDE_DIRECTION.RIGHT)), t.slideMovableContainerToLeftPos(), t.enableSlideLeftArrow(), 0 === n.movableContainerLeftPos }, t.refreshScrollArrowsDisabledState = function () { var e = this, t = e.stc; if (t.disableScrollArrowsOnFullyScrolled && t.scrollArrowsVisible) { if (t.movableContainerLeftPos >= 0) return e.disableSlideRightArrow(), void e.enableSlideLeftArrow(); if (t.movableContainerLeftPos <= e.getMinPos()) return e.disableSlideLeftArrow(), void e.enableSlideRightArrow(); e.enableSlideLeftArrow(), e.enableSlideRightArrow() } }, t.scrollToActiveTab = function () { var e, t, n, r, a, o, i, s, l, c = this, d = c.stc; if (d.scrollArrowsVisible && ((t = d.$tabsUl.find("li > .nav-link.active")).length && (e = t.parent()), e && e.length)) { if (l = d.$slideRightArrow.outerWidth(), o = e.outerWidth(), r = (n = e.offset().left - d.$fixedContainer.offset().left) + o, a = d.fixedContainerWidth - l, d.rtl) { if (d.$slideLeftArrow.outerWidth(), n < 0) return d.movableContainerLeftPos += n, c.slideMovableContainerToLeftPos(), !0; if (r > a) return d.movableContainerLeftPos += r - a + 2 * l, c.slideMovableContainerToLeftPos(), !0 } else { if (r > a) return i = r - a + l, i += (s = d.fixedContainerWidth / 2) - o / 2, d.movableContainerLeftPos -= i, c.slideMovableContainerToLeftPos(), !0; if (d.$slideLeftArrow.outerWidth(), n < 0) return s = d.fixedContainerWidth / 2, d.movableContainerLeftPos += -n + s - o / 2, c.slideMovableContainerToLeftPos(), !0 } return !1 } }, t.setMovableContainerLeftPosToTabEdge = function (t) { var n = this.stc, r = -n.movableContainerLeftPos, o = 0; n.$tabsLiCollection.each((function () { var i = e(this).width(); if ((o += i) > r) return n.movableContainerLeftPos = t === a.SLIDE_DIRECTION.RIGHT ? -(o - i) : -o, !1 })) }, t.slideMovableContainerToLeftPos = function () { var e, t = this, n = t.stc, r = t.getMinPos(); n.movableContainerLeftPos > 0 ? n.movableContainerLeftPos = 0 : n.movableContainerLeftPos < r && (n.movableContainerLeftPos = r), n.movableContainerLeftPos = n.movableContainerLeftPos / 1, e = t.getMovableContainerCssLeftVal(), t.performingSlideAnim = !0, n.$movableContainer.css({ transform: "translateX(" + e + ")" }), n.$movableContainer.on("transitionend.scrtabs", (function () { n.$movableContainer.off("transitionend.scrtabs"), t.performingSlideAnim = !1, t.refreshScrollArrowsDisabledState() })) } }(s.prototype), function (t) { t.initTabs = function (t, n, r, a) { var o, i = this, s = i.elementsHandler; t.enableRtlSupport && "rtl" === e("html").attr("dir") && (i.rtl = !0), t.scrollToTabEdge && (i.scrollToTabEdge = !0), t.disableScrollArrowsOnFullyScrolled && (i.disableScrollArrowsOnFullyScrolled = !0), t.reverseScroll && (i.reverseScroll = !0), 1 !== t.widthMultiplier && (o = Number(t.widthMultiplier), isNaN(o) || (i.widthMultiplier = o)), "4" === t.bootstrapVersion.toString().charAt(0) && (i.usingBootstrap4 = !0), setTimeout((function () { n.find(".nav-tabs").show(), s.initElements(t), s.refreshAllElementSizes(), n.css("visibility", "visible"), a && a(); r && r() }), 100) }, t.scrollToActiveTab = function (e) { this.scrollMovement.scrollToActiveTab(e) } }(l.prototype); var c = function () { return { getElTabPaneForLi: function (t) { return e(t.find("a").attr("href")) }, getNewElNavTabs: function () { return e('<ul class="nav nav-tabs" role="tablist"></ul>') }, getNewElScrollerElementWrappingNavTabsInstance: function (t, n) { var r = e('<div class="scrtabs-tab-container"></div>'), o = n.leftArrowContent || function (e) { return ['<div class="scrtabs-tab-scroll-arrow scrtabs-tab-scroll-arrow-left">', '  <span class="' + e.cssClassLeftArrow + '"></span>', "</div>"].join("") }(n), i = e(o), s = n.rightArrowContent || function (e) { return ['<div class="scrtabs-tab-scroll-arrow scrtabs-tab-scroll-arrow-right">', '  <span class="' + e.cssClassRightArrow + '"></span>', "</div>"].join("") }(n), l = e(s), c = e('<div class="scrtabs-tabs-fixed-container"></div>'), d = e('<div class="scrtabs-tabs-movable-container"></div>'); n.disableScrollArrowsOnFullyScrolled && i.add(l).addClass(a.CSS_CLASSES.SCROLL_ARROW_DISABLE); return r.append(i, c.append(d.append(t)), l) }, getNewElTabAnchor: t, getNewElTabContent: function () { return e('<div class="tab-content"></div>') }, getNewElTabLi: function (n, r, a) { var o = a.tabLiContent || '<li class="nav-item"></li>', i = e(o), s = t(n, r).appendTo(i); n[r.disabled] ? (s.addClass("disabled"), s.attr("data-toggle", "")) : a.forceActiveTab && n[r.active] && s.addClass("active"); a.tabPostProcessor && a.tabPostProcessor(i, s); return i }, getNewElTabPane: function (t, n, r) { var a = e('<div role="tabpanel" class="tab-pane fade show"></div>').attr("id", t[n.paneId]).html(t[n.content]); r.forceActiveTab && t[n.active] && a.addClass("active"); return a } }; function t(t, n) { return e('<a class="nav-link" role="tab" data-toggle="tab"></a>').attr("href", "#" + t[n.paneId]).html(t[n.title]) } }(), d = function () { return { didTabOrderChange: function (t, r, a) { var o = !1; return t.each((function (t) { var i = n(r, a.paneId, e(this).data("tab")[a.paneId]); if (i > -1 && i !== t) return o = !0, !1 })), o }, getIndexOfClosestEnabledTab: function (e, n) { var r = e.length - 1, a = -1, o = 0, i = 0; for (; -1 === a && i >= 0 && !t.CP.shouldStopExecution(0);)((i = n + ++o) <= r && !e.eq(i).hasClass("disabled") || (i = n - o) >= 0 && !e.eq(i).hasClass("disabled")) && (a = i); return t.CP.exitedLoop(0), a }, getTabIndexByPaneId: n, storeDataOnLiEl: function (t, n, r) { t.data({ tab: e.extend({}, n[r]), index: r }) } }; function n(e, t, n) { var r = -1; return e.some((function (e, a) { if (e[t] === n) return r = a, !0 })), r } }(); function b(t, n, r, o) { t.find('a[data-toggle="tab"]').removeData(a.DATA_KEY_BOOTSTRAP_TAB); var i = c.getNewElScrollerElementWrappingNavTabsInstance(t.clone(!0), n), s = new l(i), d = t.data("scrtabs"); return d ? d.scroller = i : t.data("scrtabs", { scroller: i }), t.replaceWith(i.css("visibility", "hidden")), n.tabClickHandler && "function" == typeof n.tabClickHandler && (i.hasTabClickHandler = !0, s.tabClickHandler = n.tabClickHandler), i.initTabs = function () { s.initTabs(n, i, r, o) }, i.scrollToActiveTab = function () { s.scrollToActiveTab(n) }, i.initTabs(), function (t, n) { var r; function o(t) { e(t.target).append(r.off(a.EVENTS.CLICK)) } function i(o) { var i, s, l, c = e(o.target), d = c.offset(), b = t.find("li.nav-item > a.active").parent(); function f(n) { var r = e(n.target), a = r.parent(".dropdown-menu"), o = r.attr("href"); r.find("a").hasClass("active") || (t.find("li > a.active").not(c.find("> a.nav-link")).add(a.find("li > a.nav-link.active")).removeClass("active"), c.find("> a.nav-link").addClass("active"), e(".tab-content .tab-pane.active").removeClass("active"), e(o).addClass("active show")) } r = c.find(".dropdown-menu").attr("data-" + a.DATA_KEY_DDMENU_MODIFIED, !0), b[0] !== c[0] && r.find("a.nav-link.active").removeClass("active"), r.on(a.EVENTS.CLICK, 'a[role="tab"]', f), e("body").append(r), i = r.width() + d.left, s = t.width() - (n.$slideRightArrow.outerWidth() + 1), l = d.left, i > s && (l -= i - s), r.css({ display: "block", top: d.top + c.outerHeight() - 2, left: l }) } t.on(a.EVENTS.DROPDOWN_MENU_SHOW, i).on(a.EVENTS.DROPDOWN_MENU_HIDE, o) }(i, s), i } function f(e) { return e.find('a[role="tab"]') } function C(t) { var n = t.$currTabLis, r = t.updatedTabsArray, a = t.propNames, o = !1; return n.each((function (n) { var i = e(this), s = i.data("tab"), l = d.getTabIndexByPaneId(r, a.paneId, s[a.paneId]), b = l > -1 ? r[l] : null; t.tabLi = { $li: i, currDomIdx: n, newIdx: l, $contentPane: c.getElTabPaneForLi(i), origTabData: s, newTabData: b }, (function (e) { var t, n = e.tabLi, r = e.ignoreTabPanes, a = n.$li; return -1 === n.newIdx && (f(a).hasClass("active") && (t = d.getIndexOfClosestEnabledTab(e.$currTabLis, n.currDomIdx)) > -1 && (e.$currTabLis.eq(t).find('a[role="tab"]').addClass("active"), r || e.$currTabContentPanes.eq(t).find('a[role="tab"]').addClass("active")), a.remove(), r || n.$contentPane.remove(), !0) }(t) || function (e) { var t = e.tabLi, n = e.ignoreTabPanes, r = t.$li, a = t.$contentPane, o = t.origTabData, i = t.newTabData, s = e.propNames, l = !1; return o[s.title] !== i[s.title] && (f(r).html(o[s.title] = i[s.title]), l = !0), o[s.disabled] !== i[s.disabled] && (i[s.disabled] ? f(r).addClass("disabled").attr("data-toggle", "") : f(r).removeClass("disabled").attr("data-toggle", "tab"), o[s.disabled] = i[s.disabled], l = !0), e.options.forceActiveTab && (f(r)[i[s.active] ? "addClass" : "removeClass"]("active"), a[i[s.active] ? "addClass" : "removeClass"]("active"), o[s.active] = i[s.active], l = !0), n || o[s.content] === i[s.content] || (a.html(o[s.content] = i[s.content]), l = !0), l }(t)) && (o = !0) })), o } function v(t, n) { var r = t.data().scrtabs, a = r.scroller, o = t.find(".scrtabs-tab-container .nav-tabs"), i = t.find(".tab-content"), s = !1, l = { options: n, updatedTabsArray: r.tabs, updatedTabsLiContent: r.tabsLiContent, updatedTabsPostProcessors: r.tabsPostProcessors, propNames: r.propNames, ignoreTabPanes: r.ignoreTabPanes, $navTabs: o, $currTabLis: o.find("> li"), $currTabContentPanesContainer: i, $currTabContentPanes: i.find(".tab-pane") }; return function (e) { var t = e.updatedTabsArray, n = e.updatedTabsLiContent || [], r = e.updatedTabsPostProcessors || [], a = e.propNames, o = e.ignoreTabPanes, i = e.options, s = e.$currTabLis, l = e.$navTabs, b = o ? null : e.$currTabContentPanesContainer, f = o ? null : e.$currTabContentPanes, C = !1; return t.forEach((function (e, v) { var u, h = s.find('a[href="#' + e[a.paneId] + '"]'), S = v >= s.length; h.length || (C = !0, i.tabLiContent = n[v], i.tabPostProcessor = r[v], h = c.getNewElTabLi(e, a, i), d.storeDataOnLiEl(h, t, v), S ? h.appendTo(l) : h.insertBefore(s.eq(v)), o || void 0 === e[a.content] || (u = c.getNewElTabPane(e, a, i), S ? u.appendTo(b) : u.insertBefore(f.eq(v)))) })), C }(l) && (s = !0), function (t) { var n = t.$currTabLis, r = t.updatedTabsArray, a = t.propNames, o = t.ignoreTabPanes, i = [], s = o ? null : []; return !!d.didTabOrderChange(n, r, a) && (r.forEach((function (t) { var r = t[a.paneId]; i.push(n.find('a[role="tab"][href="#' + r + '"]').parent("li")), o || s.push(e("#" + r)) })), t.$navTabs.append(i), o || t.$currTabContentPanesContainer.append(s), !0) }(l) && (s = !0), C(l) && (s = !0), s && a.initTabs(), s } function u() { var t = e(this).data("scrtabs"); t && t.scroller.scrollToActiveTab() } var h = { destroy: function () { return this.each(S) }, init: function (t) { var n = this, r = n.length - 1, o = e.extend({}, e.fn.scrollingTabs.defaults, t || {}); return o.tabs ? n.each((function (t) { !function (t, n, r) { var a, o = n.tabs, i = { paneId: n.propPaneId, title: n.propTitle, active: n.propActive, disabled: n.propDisabled, content: n.propContent }, s = n.ignoreTabPanes, l = o.length && void 0 !== o[0][i.content], f = c.getNewElNavTabs(), C = c.getNewElTabContent(), v = s ? null : function () { a.after(C) }; if (o.length) o.forEach((function (e, t) { var r = { forceActiveTab: !0, tabLiContent: n.tabsLiContent && n.tabsLiContent[t], tabPostProcessor: n.tabsPostProcessors && n.tabsPostProcessors[t] }; c.getNewElTabLi(e, i, r).appendTo(f), !s && l && c.getNewElTabPane(e, i, r).appendTo(C) })), (a = b(f, n, r, v)).appendTo(t), t.data({ scrtabs: { tabs: o, propNames: i, ignoreTabPanes: s, hasTabContent: l, tabsLiContent: n.tabsLiContent, tabsPostProcessors: n.tabsPostProcessors, scroller: a } }), a.find(".nav-tabs > li").each((function (t) { d.storeDataOnLiEl(e(this), o, t) })) }(e(this), o, t < r ? null : function () { n.trigger(a.EVENTS.TABS_READY) }) })) : n.each((function (t) { b(e(this).data({ scrtabs: { isWrapperOnly: !0 } }), o, t < r ? null : function () { n.trigger(a.EVENTS.TABS_READY) }) })) }, refresh: function (t) { var n = e.extend({}, e.fn.scrollingTabs.defaults, t || {}); return this.each((function () { !function (t, n) { t.data("scrtabs") && (!t.data("scrtabs").isWrapperOnly && v(t, n) || e("body").trigger(a.EVENTS.FORCE_REFRESH)) }(e(this), n) })) }, scrollToActiveTab: function () { return this.each(u) } }; function S() { var n, r = e(this), o = r.data("scrtabs"); if (o) { for ("self" === o.enableSwipingElement ? r.removeClass(a.CSS_CLASSES.ALLOW_SCROLLBAR) : "parent" === o.enableSwipingElement && r.closest(".scrtabs-tab-container").parent().removeClass(a.CSS_CLASSES.ALLOW_SCROLLBAR), o.scroller.off(a.EVENTS.DROPDOWN_MENU_SHOW).off(a.EVENTS.DROPDOWN_MENU_HIDE), o.scroller.find("[data-" + a.DATA_KEY_DDMENU_MODIFIED + "]").css({ display: "", left: "", top: "" }).off(a.EVENTS.CLICK).removeAttr("data-" + a.DATA_KEY_DDMENU_MODIFIED), o.scroller.hasTabClickHandler && r.find('a[data-toggle="tab"]').off(".scrtabs"), o.isWrapperOnly ? (n = r.parents(".scrtabs-tab-container")).length && n.replaceWith(r) : (o.scroller && o.scroller.initTabs && (o.scroller.initTabs = null), r.find(".scrtabs-tab-container").add(".tab-content").remove()), r.removeData("scrtabs"); --e.fn.scrollingTabs.nextInstanceId >= 0 && !t.CP.shouldStopExecution(1);)e(t).off(a.EVENTS.WINDOW_RESIZE + e.fn.scrollingTabs.nextInstanceId); t.CP.exitedLoop(1), e("body").off(a.EVENTS.FORCE_REFRESH) } } e.fn.scrollingTabs = function (t) { return h[t] ? h[t].apply(this, Array.prototype.slice.call(arguments, 1)) : t && "object" != typeof t ? void e.error("Method " + t + " does not exist on $.scrollingTabs.") : h.init.apply(this, arguments) }, e.fn.scrollingTabs.nextInstanceId = 0, e.fn.scrollingTabs.defaults = { tabs: null, propPaneId: "paneId", propTitle: "title", propActive: "active", propDisabled: "disabled", propContent: "content", ignoreTabPanes: !1, scrollToTabEdge: !1, disableScrollArrowsOnFullyScrolled: !1, forceActiveTab: !1, reverseScroll: !1, widthMultiplier: 1, tabClickHandler: null, cssClassLeftArrow: "", cssClassRightArrow: "", leftArrowContent: "", rightArrowContent: "", tabsLiContent: null, tabsPostProcessors: null, enableSwiping: !1, enableRtlSupport: !1, handleDelayedScrollbar: !1, bootstrapVersion: 3 } }(jQuery, window), function (e) { "use strict"; e((function () { e(".nav-tabs").scrollingTabs({ enableSwiping: !0, scrollToTabEdge: !0, disableScrollArrowsOnFullyScrolled: !0 }).on("ready.scrtabs", (function () { e(".tab-content").show() })) })) }(jQuery);