function PlaceMarketBuyOrder() { if (ValidateMarketBuy()) { var e = $("#mbTotal").val(), a = BuildMarketBuyOrderPackage(); $.ajax({ type: "POST", url: "/Order/MarketOrderBuy", beforeSend: function (e) { e.setRequestHeader("RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val()) }, data: a, success: function (a) { "true" == a.item1 ? (console.log(_q + " available:" + UpdateQuoteQty(-e)), TupleMsg(a, !0)) : TupleEr(a, !0) }, error: function (e) { console.log(e.statusCode + ":" + e.statusText + ":" + e.responseText) } }), $(this).parent(".input-btn-css").addClass("inputDisabled") } } function UpdateQuoteQty(e) { var a = $("#nquoteavailable").val(); return a = +a + e, $("#mbqa").text(a), $("#nquoteavailable").val(a), __qa = a, a } function UpdateBaseQty(e) { var a = $("#nbaseavailable").val(); return a = +a + e, $("#msba").text(a), $("#nbaseavailable").val(a), _ba = a, a } function ValidateMarketBuy() { var e = !1, a = $("#mbAmount").val(), t = $("#nquoteavailable").val(); +a <= 0 ? ($("#mbAmountV").text("Invalid Amount"), $("#mbAmountV").removeClass("d-none"), e = !0) : $("#mbAmountV").addClass("d-none"), lastPrice <= 0 ? ($("#mbPriceV").text("Invalid Price"), $("#mbPriceV").removeClass("d-none"), e = !0) : $("#mbPriceV").addClass("d-none"); var l = $("#mbTotal").val(); return l <= 0 || +l > +t ? ($("#mbTotalV").text("Insufficent/Invalid Total"), $("#mbTotalV").removeClass("d-none"), e = !0) : $("#mbTotalV").addClass("d-none"), !e } var mcode = "", bcode = "", qcode = ""; function BuildMarketBuyOrderPackage() { var e = $("#mbAmount").val(), a = lastPrice; return +a > 0 ? { Amount: e, Price: a, side: 0, mCode: __mCode, quoteCode: __q, qTag: _qTag, baseCode: __b, bTag: _bTag, OrderId: "?" } : { Amount: e, Price: 0, side: 0, mCode: __mCode, quoteCode: __q, qTag: _qTag, baseCode: __b, bTag: _bTag, OrderId: "?" } } function MarketBuyRest() { $("#mbAmount").val(""), $("#mbTotal").val(""), $("#mbTechnoSavvyV").val(""), $("#mbSTV").val(""), $("#mbassamt").val(""), $("#mbPriceV").addClass("d-none"), $("#mbAmountV").addClass("d-none"), $("#mbTotalV").addClass("d-none") } function MarketBuyUpdate1() { p = lastPrice, a = $("#mbAmount").val(), t = $("#mbTotal").val(), p >= 0 && a >= 0 && (t = p * a), $("#mbTotal").val(t), MarketBuyInfo() } function MarketBuyUpdate2() { p = lastPrice, a = $("#mbAmount").val(), t = $("#mbTotal").val(), p >= 0 && t >= 0 && (a = t / p), $("#mbAmount").val(a), MarketBuyInfo() } function MarketBuyInfo() { var e = $("#mbAmount").val(); e > 0 ? e -= e * _bsr : e = 0, $("#mbassamt").html(GetFormatedVal(e, __bf) + " " + __b); var a = _cbt * (_bsr * $("#mbTotal").val()); $("#mbTechnoSavvyV").html(GetFormatedVal(a, __qf) + " " + __q); a = e * $("#mbPrice").val() + a; $("#mbSTV").html(GetFormatedVal(a, __qf) + " " + __q) } function PlaceMarketSellOrder() { if (ValidateMarketSell()) { var e = BuildMarketSellOrderPackage(), a = $("#msTotal").val(); $.ajax({ type: "POST", url: "/Order/MarketOrderSell", beforeSend: function (e) { e.setRequestHeader("RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val()) }, data: e, success: function (e) { "true" == e.item1 || 1 == e.item1 ? (console.log(_q + " available:" + UpdateBaseQty(-a)), TupleMsg(e, !0)) : TupleEr(e, !0) }, error: function (e) { console.log(e.statusCode + ":" + e.statusText + ":" + e.responseText) } }), $(this).parent(".input-btn-css").addClass("inputDisabled") } } function ValidateMarketSell() { var e = !1, a = $("#msAmount").val(), t = $("#nbaseavailable").val(); +a <= 0 || +a > t ? ($("#msAmountV").text("Invalid Amount"), $("#msAmountV").removeClass("d-none"), e = !0) : $("#msAmountV").addClass("d-none"); var l = lastPrice; return l <= 0 ? ($("#msPriceV").text("Invalid Price"), $("#msPriceV").removeClass("d-none"), e = !0) : $("#msPriceV").addClass("d-none"), $("#msTotal").val() <= 0 && +a * l <= 0 ? ($("#msTotalV").text("Invalid Total"), $("#msTotalV").removeClass("d-none"), e = !0) : $("#msTotalV").addClass("d-none"), !e } function BuildMarketSellOrderPackage() { var e = $("#msAmount").val(), a = lastPrice; return +a > 0 ? { Amount: e, Price: a, side: 1, mCode: __mCode, quoteCode: __q, qTag: _qTag, baseCode: __b, bTag: _bTag, OrderId: "?" } : { Amount: e, Price: 0, side: 1, mCode: __mCode, quoteCode: __q, qTag: _qTag, baseCode: __b, bTag: _bTag, OrderId: "?" } } function MarketSellRest() { $("#msAmount").val(""), $("#msTotal").val(""), $("#msTechnoSavvyV").val(""), $("#msSTV").val(""), $("#msassamt").val(""), $("#msPriceV").addClass("d-none"), $("#msAmountV").addClass("d-none"), $("#msTotalV").addClass("d-none") } function MarketSellUpdate1() { p = lastPrice, a = $("#msAmount").val(), t = $("#msTotal").val(), p >= 0 && a >= 0 && (t = p * a), $("#msTotal").val(t), MarketSellInfo() } function MarketSellUpdate2() { p = lastPrice, a = $("#msAmount").val(), t = $("#msTotal").val(), p >= 0 && t >= 0 && (a = t / p), $("#msAmount").val(a), MarketSellInfo() } function MarketSellInfo() { var e = $("#msTotal").val(); e > 0 ? e -= e * _asr : e = 0, $("#msassamt").html(GetFormatedVal(e, __qf) + " " + __q); var a = _cbt * (_asr * $("#msTotal").val()); $("#msTechnoSavvyV").html(GetFormatedVal(a, __qf) + " " + __q), $("#msSTV").html(GetFormatedVal(e + a, __qf) + " " + __q) } function TupleMsg(e, a) { !0 === a && console.log("Order Status:" + e.item1 + ", Reason:" + e.item2), $(".input-btn-css").removeClass("inputDisabled") } function TupleEr(e, a) { !0 === a && console.log("Order Status:" + e.item1 + ", Reason:" + e.item2) } $("#mbPrice").keyup(MarketBuyUpdate1), $("#mbAmount").keyup(MarketBuyUpdate1), $("#mbTotal").keyup(MarketBuyUpdate2), $("#mbPrice").change(MarketBuyUpdate1), $("#mbAmount").change(MarketBuyUpdate1), $("#mbTotal").change(MarketBuyUpdate2), $("#btnBuyMarket").click(PlaceMarketBuyOrder), $("#btnBuyMarketReset").click(MarketBuyRest), MarketBuyInfo(), MarketSellInfo(), $("#msPrice").prop("disabled", !0), $("#mbPrice").prop("disabled", !0), $("#msAmount").keyup(MarketSellUpdate1), $("#msTotal").keyup(MarketSellUpdate2), $("#msAmount").change(MarketSellUpdate1), $("#msTotal").change(MarketSellUpdate2), $("#btnSellMarket").click(PlaceMarketSellOrder), $("#btnSellMarketReset").click(MarketSellRest);